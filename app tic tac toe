import tkinter as tk
from tkinter import messagebox
import random

# Variáveis globais
jogador_atual = "X"
tabuleiro = [[" " for _ in range(3)] for _ in range(3)]

def clique_do_botao(linha, coluna):
    global jogador_atual, tabuleiro

    # Verificar se a posição já foi jogada
    if tabuleiro[linha][coluna] != " ":
        return

    # Fazer a jogada do usuário
    tabuleiro[linha][coluna] = jogador_atual
    botoes[linha][coluna].configure(text=jogador_atual)

    # Verificar se o usuário venceu
    if verificar_vencedor(jogador_atual):
        messagebox.showinfo("Fim do jogo", "Jogador {} venceu!".format(jogador_atual))
        reiniciar_jogo()
        return

    # Verificar se o jogo empatou
    if jogo_empatado():
        messagebox.showinfo("Fim do jogo", "O jogo empatou!")
        reiniciar_jogo()
        return

    # Alternar para o próximo jogador
    jogador_atual = "O"

    # Fazer a jogada do computador
    linha_computador, coluna_computador = fazer_jogada_computador()
    tabuleiro[linha_computador][coluna_computador] = jogador_atual
    botoes[linha_computador][coluna_computador].configure(text=jogador_atual)

    # Verificar se o computador venceu
    if verificar_vencedor(jogador_atual):
        messagebox.showinfo("Fim do jogo", "Jogador {} venceu!".format(jogador_atual))
        reiniciar_jogo()
        return

    # Verificar se o jogo empatou
    if jogo_empatado():
        messagebox.showinfo("Fim do jogo", "O jogo empatou!")
        reiniciar_jogo()
        return

    # Alternar para o próximo jogador
    jogador_atual = "X"

def fazer_jogada_computador():
    # Procurar por uma jogada vencedora para o computador
    for linha in range(3):
        for coluna in range(3):
            if tabuleiro[linha][coluna] == " ":
                tabuleiro[linha][coluna] = "O"
                if verificar_vencedor("O"):
                    tabuleiro[linha][coluna] = " "
                    return linha, coluna
                tabuleiro[linha][coluna] = " "

    # Bloquear uma possível vitória do jogador
    for linha in range(3):
        for coluna in range(3):
            if tabuleiro[linha][coluna] == " ":
                tabuleiro[linha][coluna] = "X"
                if verificar_vencedor("X"):
                    tabuleiro[linha][coluna] = "O"
                    return linha, coluna
                tabuleiro[linha][coluna] = " "

    # Tentar ocupar o centro do tabuleiro
    if tabuleiro[1][1] == " ":
        return 1, 1

    # Escolher uma posição aleatória vazia
    posicoes_vazias = []
    for linha in range(3):
        for coluna in range(3):
            if tabuleiro[linha][coluna] == " ":
                posicoes_vazias.append((linha, coluna))

    if posicoes_vazias:
        return random.choice(posicoes_vazias)

    # Caso o tabuleiro esteja completo, retornar uma posição inválida
    return -1, -1

def verificar_vencedor(jogador):
    # Verificar linhas
    for linha in tabuleiro:
        if linha.count(jogador) == 3:
            return True

    # Verificar colunas
    for coluna in range(3):
        if tabuleiro[0][coluna] == tabuleiro[1][coluna] == tabuleiro[2][coluna] == jogador:
            return True

    # Verificar diagonais
    if tabuleiro[0][0] == tabuleiro[1][1] == tabuleiro[2][2] == jogador:
        return True
    if tabuleiro[0][2] == tabuleiro[1][1] == tabuleiro[2][0] == jogador:
        return True

    return False

def jogo_empatado():
    for linha in tabuleiro:
        if " " in linha:
            return False
    return True

def reiniciar_jogo():
    global jogador_atual, tabuleiro

    # Limpar o tabuleiro
    for linha in range(3):
        for coluna in range(3):
            tabuleiro[linha][coluna] = " "
            botoes[linha][coluna].configure(text=" ")

    # Definir jogador inicial
    jogador_atual = "X"

# Criar a janela principal
janela = tk.Tk()
janela.title("Jogo do Galo")
janela.geometry("250x250")

# Criar os botões do tabuleiro
botoes = []
for linha in range(3):
    linha_botoes = []
    for coluna in range(3):
        botao = tk.Button(janela, text=" ", width=10, height=5, command=lambda l=linha, c=coluna: clique_do_botao(l, c))
        botao.grid(row=linha, column=coluna)
        linha_botoes.append(botao)
    botoes.append(linha_botoes)

janela.mainloop()
